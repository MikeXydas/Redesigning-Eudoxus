-- MySQL Script generated by MySQL Workbench
-- Τετ 02 Ιαν 2019 08:33:03 μμ EET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema eamDatabase
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema eamDatabase
-- -----------------------------------------------------
USE `eamDatabase` ;

-- -----------------------------------------------------
-- Table `eamDatabase`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`User` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `userCategory` INT NOT NULL,
  `categoryId` INT NOT NULL,
  `uniName` VARCHAR(45) NULL,
  `uniDepartment` VARCHAR(45) NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Book` (
  `bookId` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `authors` VARCHAR(45) NOT NULL,
  `ISBN` VARCHAR(45) NOT NULL,
  `publisher` VARCHAR(45) NOT NULL,
  `publishYear` INT NOT NULL,
  `weight` FLOAT NULL,
  `pages` INT NULL,
  `dimensions` VARCHAR(45) NULL,
  `price` FLOAT NULL,
  `cover` VARCHAR(45) NULL,
  `pdfPreview` VARCHAR(200) NULL,
  `pdfIndex` VARCHAR(200) NULL,
  `User_userId` INT NOT NULL,
  PRIMARY KEY (`bookId`, `User_userId`),
  INDEX `fk_Book_User1_idx` (`User_userId` ASC) ,
  CONSTRAINT `fk_Book_User1`
    FOREIGN KEY (`User_userId`)
    REFERENCES `eamDatabase`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Keyword`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Keyword` (
  `keywordId` INT NOT NULL AUTO_INCREMENT,
  `word` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`keywordId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Course` (
  `courseId` INT NOT NULL AUTO_INCREMENT,
  `courseName` VARCHAR(45) NOT NULL,
  `uniName` VARCHAR(45) NOT NULL,
  `uniDepartment` VARCHAR(45) NOT NULL,
  `semester` INT NOT NULL,
  PRIMARY KEY (`courseId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Statement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Statement` (
  `statementId` INT NOT NULL AUTO_INCREMENT,
  `semesterStatement` INT NOT NULL,
  `current` INT NOT NULL,
  `User_userId` INT NOT NULL,
  PRIMARY KEY (`statementId`, `User_userId`),
  INDEX `fk_Statement_User1_idx` (`User_userId` ASC) ,
  CONSTRAINT `fk_Statement_User1`
    FOREIGN KEY (`User_userId`)
    REFERENCES `eamDatabase`.`User` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Book_has_Keyword`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Book_has_Keyword` (
  `Book_bookId` INT NOT NULL,
  `Keyword_keywordId` INT NOT NULL,
  PRIMARY KEY (`Book_bookId`, `Keyword_keywordId`),
  INDEX `fk_Book_has_Keyword_Keyword1_idx` (`Keyword_keywordId` ASC) ,
  INDEX `fk_Book_has_Keyword_Book_idx` (`Book_bookId` ASC) ,
  CONSTRAINT `fk_Book_has_Keyword_Book`
    FOREIGN KEY (`Book_bookId`)
    REFERENCES `eamDatabase`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_has_Keyword_Keyword1`
    FOREIGN KEY (`Keyword_keywordId`)
    REFERENCES `eamDatabase`.`Keyword` (`keywordId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`Book_has_Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`Book_has_Course` (
  `Book_bookId` INT NOT NULL,
  `Course_courseId` INT NOT NULL,
  PRIMARY KEY (`Book_bookId`, `Course_courseId`),
  INDEX `fk_Book_has_Course_Course1_idx` (`Course_courseId` ASC) ,
  INDEX `fk_Book_has_Course_Book1_idx` (`Book_bookId` ASC) ,
  CONSTRAINT `fk_Book_has_Course_Book1`
    FOREIGN KEY (`Book_bookId`)
    REFERENCES `eamDatabase`.`Book` (`bookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_has_Course_Course1`
    FOREIGN KEY (`Course_courseId`)
    REFERENCES `eamDatabase`.`Course` (`courseId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eamDatabase`.`StatedBooks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eamDatabase`.`StatedBooks` (
  `statedBooksId` INT NOT NULL AUTO_INCREMENT,
  `bookId` INT NOT NULL,
  `courseId` INT NOT NULL,
  `Statement_statementId` INT NOT NULL,
  `Statement_User_userId` INT NOT NULL,
  PRIMARY KEY (`statedBooksId`, `Statement_statementId`, `Statement_User_userId`),
  INDEX `fk_statedBooks_Statement1_idx` (`Statement_statementId` ASC, `Statement_User_userId` ASC) ,
  CONSTRAINT `fk_statedBooks_Statement1`
    FOREIGN KEY (`Statement_statementId` , `Statement_User_userId`)
    REFERENCES `eamDatabase`.`Statement` (`statementId` , `User_userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
